{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","submitFunc","event","preventDefault","parseInt","state","stime","substring","etime","setState","op","newDate","Date","fulldate","setDate","getDate","prev","getMonth","getFullYear","toString","flag","adate","fetch","then","response","json","data","i","sarray","map","c","start_time","length","earray","end_time","sarr","Number","earr","sd","ed","displaybutton","handleChange","date","onChangeS","onChangeE","displayform","this","curdate","renderProducts","next","sort","a","b","d","className","participants","p","description","onClick","left","toDateString","right","onSubmit","selected","onChange","isClearable","dateFormat","minDate","value","type","name","handleTextChange","alert","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.bd5f2162.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\nimport DatePicker from \"react-datepicker\";\nimport TimePicker from 'react-time-picker';\n\nimport \"react-datepicker/dist/react-datepicker.css\";\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = ({\n    adate: null,\n    fulldate: new Date(),\n    displayform: 'false',\n    displaybutton: false,\n    stime: '10:00',\n    op:'',\n    etime: '11:30',\n    data:[]\n  });\n  }\n  componentDidMount() {\n\n    let separator='/';\n    let newDate = new Date();\n    this.setState({fulldate:newDate})\n    let curdate=`${newDate.getDate()}${separator}${newDate.getMonth() + 1<10?`0${newDate.getMonth() + 1}`:`${newDate.getMonth() + 1}`}${separator}${newDate.getFullYear()}`.toString();\n    this.setState({ adate:curdate})    \n    const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n    const url = 'http://fathomless-shelf-5846.herokuapp.com/api/schedule?date='+curdate; // site that doesn’t send Access-Control-*\n    fetch(proxyurl + url) // https://cors-anywhere.herokuapp.com/https://example.com\n      .then((response) => response.json())\n      .then(data => this.setState({ data }));\n      \n\n  }\n    left() {\n      let separator='/';\n      let newDate = new Date(this.state.fulldate);\n      newDate.setDate(this.state.fulldate.getDate() - 1);\n      this.setState({fulldate:newDate}) \n      let prev=`${newDate.getDate()}${separator}${newDate.getMonth() + 1<10?`0${newDate.getMonth() + 1}`:`${newDate.getMonth() + 1}`}${separator}${newDate.getFullYear()}`.toString();\n\n      this.setState({adate: prev})\n      const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n      const url = 'http://fathomless-shelf-5846.herokuapp.com/api/schedule?date='+prev; // site that doesn’t send Access-Control-*\n      fetch(proxyurl + url) // https://cors-anywhere.herokuapp.com/https://example.com\n        .then((response) => response.json())\n        .then(data => this.setState({ data }));\n        this.renderProducts()\n    }\n    right() {\n      let separator='/';\n      let newDate = new Date(this.state.fulldate);\n      newDate.setDate(this.state.fulldate.getDate() + 1);\n      this.setState({fulldate:newDate}) \n      let next =`${newDate.getDate()}${separator}${newDate.getMonth() + 1<10?`0${newDate.getMonth() + 1}`:`${newDate.getMonth() + 1}`}${separator}${newDate.getFullYear()}`.toString();\n\n      this.setState({adate: next})\n      const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n      const url = 'http://fathomless-shelf-5846.herokuapp.com/api/schedule?date='+next; // site that doesn’t send Access-Control-*\n      fetch(proxyurl + url) // https://cors-anywhere.herokuapp.com/https://example.com\n        .then((response) => response.json())\n        .then(data => this.setState({ data }));\n        this.renderProducts()\n    }\n  renderProducts() {\n    this.state.data.sort((a, b) => a.start_time > b.start_time)  \n\n\n\n    return this.state.data.map(d => \n        (\n            \n              <div className=\"meeting_sch\">\n                <strong className=\"meeting_schTime\">\n                  {(parseInt(d.start_time) % 12||12)}{d.start_time.substring(d.start_time.length - 3, d.start_time.length)} {(parseInt(d.start_time)>=12?'PM':'AM')}<span> - </span>   \n                  {(parseInt(d.end_time) % 12||12)}{d.end_time.substring(d.end_time.length - 3, d.end_time.length)} {(parseInt(d.end_time)>=12?'PM':'AM')}\n                </strong>\n                <div className=\"meeting_schDetails\">\n                  Meeting with {d.participants.map(p=>\n                  <span>{p}, </span> )\n                  }<span>for </span>\n                  {d.description}\n                </div>\n              </div>\n            \n        )\n    )\n}\nsubmitFunc=(event) => {\n  event.preventDefault();\n  if ((parseInt(this.state.stime.substring(0,2))===parseInt(this.state.etime.substring(0,2)))&&(parseInt(this.state.stime.substring(3,5))>=parseInt(this.state.etime.substring(3,5)))){  \n    this.setState({op:\"Enter Start and End time correctly\"})\n  }else if(parseInt(this.state.stime.substring(0,2))>parseInt(this.state.etime.substring(0,2))){ \n    this.setState({op:\"Enter Start and End time correctly\"})\n  }\n  else{\n    let separator='/';\n    let newDate = new Date(this.state.fulldate);\n    newDate.setDate(this.state.fulldate.getDate());\n    let prev=`${newDate.getDate()}${separator}${newDate.getMonth() + 1<10?`0${newDate.getMonth() + 1}`:`${newDate.getMonth() + 1}`}${separator}${newDate.getFullYear()}`.toString();\n    var flag=0;\n    this.setState({adate: prev})\n    const proxyurl = \"https://cors-anywhere.herokuapp.com/\";\n    const url = 'http://fathomless-shelf-5846.herokuapp.com/api/schedule?date='+prev; // site that doesn’t send Access-Control-*\n    fetch(proxyurl + url) // https://cors-anywhere.herokuapp.com/https://example.com\n      .then((response) => response.json())\n      .then(data => this.setState({ data }));\n  \n    let sarray = this.state.data.map(c => c.start_time.substring(0,c.start_time.length-3))\n    let earray = this.state.data.map(c => c.end_time.substring(0,c.end_time.length-3))\n    var sarr = sarray.map(Number)\n    var earr = earray.map(Number)\n\n    var i\n    var sd=parseInt(this.state.stime.substring(0,2))\n    var ed=parseInt(this.state.etime.substring(0,2))\n    for(i=0;i<sarr.length;i++){\n      if((sd>=sarr[i]&&sd<earr[i])||(ed>sarr[i]&&sd<=earr[i])){\n        flag=1\n        break\n      }\n    }\n    if (flag===0){\n      this.setState({op:\"Slot Available\",displaybutton:true})\n      \n    }\n    else{\n      this.setState({op:\"Slot not Available\"})\n    }\n  }\n\n}\nhandleChange = date => {\n  this.setState({\n    fulldate: date,displaybutton:false\n  });\n};\nhandleTextChange(event) {\n}\nonChangeS = stime =>{ this.setState({ stime,displaybutton:false })};\nonChangeE = etime =>{ this.setState({ etime,displaybutton:false })};\n\n  render(){\n    if(this.state.displayform!==\"true\"){\n    return(\n       <div className=\"App\">\n          <div className=\"app__header\">\n            <button onClick={() =>this.left()}><p><i className=\"arrow left\"></i></p></button>\n            <h1 className=\"app__headerDate\">{this.state.fulldate.toDateString()}</h1>\n            <button onClick={() =>this.right()}><p><i className=\"arrow right\"></i></p></button>\n          </div>\n          {this.renderProducts()}\n        <div className=\"app__buttonClass\">\n          <button className=\"app__button\" onClick={() =>this.setState({displayform:\"true\"})}>Add Meeting</button>\n        </div>\n       </div>\n    \n    );  \n    }else if(this.state.displayform===\"true\"){\n      return(\n        <form onSubmit={this.submitFunc}>\n          <div className=\"form\">\n            <div className=\"form__dp\">\n              <div className=\"dl\">Meeting Date</div>\n              <DatePicker\n              selected={this.state.fulldate<new Date()?this.state.fulldate=new Date():this.state.fulldate}\n              onChange={this.handleChange}\n              isClearable='true'\n              dateFormat='dd/MM/yyyy'\n              minDate={new Date()}\n              />\n            </div>\n            <div className=\"form__tp\">\n            <div className=\"form__tp1\">\n              <div className=\"ltp1\">Start Date</div>\n              <TimePicker\n              onChange={this.onChangeS}\n              value={this.state.stime}\n              />\n            </div>\n            <div className=\"form__tp2\">\n            <div className=\"ltp1\">End Date</div>\n              <TimePicker\n              onChange={this.onChangeE}\n              value={this.state.etime}\n              />\n            </div>\n            </div>\n            <div className=\"form__desc\">\n              <div className=\"desc\">Description</div>\n              <input type=\"textarea\" \n              name=\"textValue\"\n              className=\"form__descTa\"\n              onChange={this.handleTextChange}\n              />\n            </div>\n            <div className=\"form__output>\">\n              <center><h3>{this.state.op}</h3></center>\n            </div>\n          </div>\n            <div className=\"form__buttonClass\">\n                <input type=\"submit\" className=\"form__button\" value=\"Check Slot\"/>\n                {this.state.displaybutton?<button onClick={() =>{this.setState({displayform:\"false\"});alert(\"Slot Booked Sucessfully\")}} className=\"bookbtn\">Book Slot</button>:null}\n            </div>\n      </form>\n      \n      );\n    }\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}